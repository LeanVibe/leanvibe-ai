# Production Alerting Rules for LeanVibe
# Critical alerts for production monitoring

apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: leanvibe-production-alerts
  namespace: monitoring
  labels:
    prometheus: leanvibe
    role: production-alerts
spec:
  groups:
  
  # High-level service availability alerts
  - name: service-availability
    interval: 30s
    rules:
    - alert: ServiceDown
      expr: up{job=~"leanvibe-backend.*"} == 0
      for: 1m
      labels:
        severity: critical
        service: leanvibe
        alert_type: availability
      annotations:
        summary: "LeanVibe service is down"
        description: "Service {{ $labels.job }} has been down for more than 1 minute"
        runbook_url: "https://docs.leanvibe.app/runbooks/service-down"
        action: "Immediate investigation required"
    
    - alert: HighErrorRate
      expr: |
        (
          sum(rate(http_requests_total{job=~"leanvibe-backend.*",code=~"5.."}[5m])) /
          sum(rate(http_requests_total{job=~"leanvibe-backend.*"}[5m]))
        ) > 0.05
      for: 5m
      labels:
        severity: critical
        service: leanvibe
        alert_type: error-rate
      annotations:
        summary: "High error rate detected"
        description: "Error rate is {{ $value | humanizePercentage }} over the last 5 minutes"
        runbook_url: "https://docs.leanvibe.app/runbooks/high-error-rate"
        action: "Check logs and recent deployments"
    
    - alert: HighResponseTime
      expr: |
        histogram_quantile(0.95, 
          sum(rate(http_request_duration_seconds_bucket{job=~"leanvibe-backend.*"}[5m])) by (le)
        ) > 2.0
      for: 5m
      labels:
        severity: warning
        service: leanvibe
        alert_type: performance
      annotations:
        summary: "High response time detected"
        description: "95th percentile response time is {{ $value }}s over the last 5 minutes"
        runbook_url: "https://docs.leanvibe.app/runbooks/high-response-time"
        action: "Check database performance and resource utilization"

  # Database alerts
  - name: database-health
    interval: 1m
    rules:
    - alert: DatabaseConnectionsHigh
      expr: |
        (
          sum(pg_stat_activity_count) /
          sum(pg_settings_max_connections)
        ) > 0.8
      for: 5m
      labels:
        severity: warning
        service: database
        alert_type: resource
      annotations:
        summary: "Database connection usage high"
        description: "Database connection usage is {{ $value | humanizePercentage }}"
        runbook_url: "https://docs.leanvibe.app/runbooks/database-connections"
        action: "Check for connection leaks and scaling needs"
    
    - alert: DatabaseReplicationLag
      expr: pg_stat_replication_lag_seconds > 30
      for: 2m
      labels:
        severity: warning
        service: database
        alert_type: replication
      annotations:
        summary: "Database replication lag high"
        description: "Replication lag is {{ $value }}s on {{ $labels.instance }}"
        runbook_url: "https://docs.leanvibe.app/runbooks/db-replication-lag"
        action: "Check replication health and network connectivity"
    
    - alert: DatabaseDiskSpaceHigh
      expr: |
        (
          (node_filesystem_size_bytes{mountpoint="/var/lib/postgresql"} - 
           node_filesystem_free_bytes{mountpoint="/var/lib/postgresql"}) /
           node_filesystem_size_bytes{mountpoint="/var/lib/postgresql"}
        ) > 0.85
      for: 10m
      labels:
        severity: critical
        service: database
        alert_type: storage
      annotations:
        summary: "Database disk space usage critical"
        description: "Database disk usage is {{ $value | humanizePercentage }}"
        runbook_url: "https://docs.leanvibe.app/runbooks/database-storage"
        action: "Clean up old data and consider scaling storage"

  # Memory and CPU alerts
  - name: resource-utilization
    interval: 1m
    rules:
    - alert: HighCPUUsage
      expr: |
        (
          100 - (avg by (instance) (irate(node_cpu_seconds_total{mode="idle"}[5m])) * 100)
        ) > 85
      for: 10m
      labels:
        severity: warning
        service: infrastructure
        alert_type: cpu
      annotations:
        summary: "High CPU usage detected"
        description: "CPU usage is {{ $value }}% on {{ $labels.instance }}"
        runbook_url: "https://docs.leanvibe.app/runbooks/high-cpu"
        action: "Check for resource-intensive processes"
    
    - alert: HighMemoryUsage
      expr: |
        (
          (node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes) /
          node_memory_MemTotal_bytes
        ) > 0.9
      for: 5m
      labels:
        severity: critical
        service: infrastructure
        alert_type: memory
      annotations:
        summary: "High memory usage detected"
        description: "Memory usage is {{ $value | humanizePercentage }} on {{ $labels.instance }}"
        runbook_url: "https://docs.leanvibe.app/runbooks/high-memory"
        action: "Check for memory leaks and consider scaling"
    
    - alert: PodCrashLooping
      expr: |
        increase(kube_pod_container_status_restarts_total[1h]) > 5
      for: 5m
      labels:
        severity: critical
        service: kubernetes
        alert_type: stability
      annotations:
        summary: "Pod is crash looping"
        description: "Pod {{ $labels.pod }} in namespace {{ $labels.namespace }} has restarted {{ $value }} times in the last hour"
        runbook_url: "https://docs.leanvibe.app/runbooks/pod-crash-loop"
        action: "Check pod logs and resource limits"

  # AI/ML service specific alerts
  - name: ai-services
    interval: 30s
    rules:
    - alert: OllamaServiceDown
      expr: up{job="ollama"} == 0
      for: 2m
      labels:
        severity: critical
        service: ai
        alert_type: availability
      annotations:
        summary: "Ollama AI service is down"
        description: "Ollama service has been unreachable for more than 2 minutes"
        runbook_url: "https://docs.leanvibe.app/runbooks/ollama-down"
        action: "Restart Ollama service and check GPU resources"
    
    - alert: AIInferenceLatencyHigh
      expr: |
        histogram_quantile(0.95,
          sum(rate(ai_inference_duration_seconds_bucket[5m])) by (le)
        ) > 10.0
      for: 3m
      labels:
        severity: warning
        service: ai
        alert_type: performance
      annotations:
        summary: "AI inference latency is high"
        description: "95th percentile inference time is {{ $value }}s"
        runbook_url: "https://docs.leanvibe.app/runbooks/ai-latency"
        action: "Check GPU utilization and model loading"
    
    - alert: GraphDatabaseConnectionFailed
      expr: neo4j_up == 0
      for: 2m
      labels:
        severity: critical
        service: database
        alert_type: availability
      annotations:
        summary: "Neo4j graph database is down"
        description: "Neo4j has been unreachable for more than 2 minutes"
        runbook_url: "https://docs.leanvibe.app/runbooks/neo4j-down"
        action: "Check Neo4j service status and memory allocation"

  # Business logic alerts
  - name: business-metrics
    interval: 2m
    rules:
    - alert: LowUserActivity
      expr: |
        sum(rate(http_requests_total{job=~"leanvibe-backend.*",endpoint=~"/api/.*"}[1h])) < 10
      for: 30m
      labels:
        severity: warning
        service: business
        alert_type: engagement
      annotations:
        summary: "User activity is unusually low"
        description: "API requests are {{ $value }}/hour, below expected threshold"
        runbook_url: "https://docs.leanvibe.app/runbooks/low-activity"
        action: "Check for service issues or investigate user behavior"
    
    - alert: AuthenticationFailureSpike
      expr: |
        sum(rate(http_requests_total{job=~"leanvibe-backend.*",endpoint="/auth/login",code!~"2.."}[5m])) > 10
      for: 2m
      labels:
        severity: warning
        service: security
        alert_type: authentication
      annotations:
        summary: "High authentication failure rate"
        description: "Authentication failures: {{ $value }}/minute"
        runbook_url: "https://docs.leanvibe.app/runbooks/auth-failures"
        action: "Check for brute force attacks or service issues"
    
    - alert: TaskProcessingBacklog
      expr: leanvibe_task_queue_length > 1000
      for: 10m
      labels:
        severity: warning
        service: processing
        alert_type: queue
      annotations:
        summary: "Task processing backlog building up"
        description: "Task queue length is {{ $value }}"
        runbook_url: "https://docs.leanvibe.app/runbooks/task-backlog"
        action: "Check processing workers and scaling needs"

  # Security alerts
  - name: security-monitoring
    interval: 1m
    rules:
    - alert: SuspiciousIPActivity
      expr: |
        sum by (client_ip) (rate(http_requests_total{code=~"4.."}[5m])) > 50
      for: 2m
      labels:
        severity: warning
        service: security
        alert_type: suspicious
      annotations:
        summary: "Suspicious IP activity detected"
        description: "High error rate from IP {{ $labels.client_ip }}: {{ $value }}/minute"
        runbook_url: "https://docs.leanvibe.app/runbooks/suspicious-ip"
        action: "Consider rate limiting or blocking IP"
    
    - alert: UnauthorizedAPIAccess
      expr: |
        sum(rate(http_requests_total{job=~"leanvibe-backend.*",code="401"}[5m])) > 20
      for: 5m
      labels:
        severity: warning
        service: security
        alert_type: access
      annotations:
        summary: "High rate of unauthorized API access attempts"
        description: "Unauthorized access attempts: {{ $value }}/minute"
        runbook_url: "https://docs.leanvibe.app/runbooks/unauthorized-access"
        action: "Review API authentication and potential attacks"

  # External dependencies
  - name: external-dependencies
    interval: 2m
    rules:
    - alert: ExternalAPIDown
      expr: probe_success{job="blackbox-external-apis"} == 0
      for: 5m
      labels:
        severity: warning
        service: external
        alert_type: dependency
      annotations:
        summary: "External API is not responding"
        description: "External service {{ $labels.instance }} is not accessible"
        runbook_url: "https://docs.leanvibe.app/runbooks/external-api-down"
        action: "Check external service status and implement fallback if needed"
    
    - alert: ExternalAPISlowResponse
      expr: probe_duration_seconds{job="blackbox-external-apis"} > 5
      for: 10m
      labels:
        severity: warning
        service: external
        alert_type: performance
      annotations:
        summary: "External API response time is high"
        description: "External service {{ $labels.instance }} response time is {{ $value }}s"
        runbook_url: "https://docs.leanvibe.app/runbooks/external-api-slow"
        action: "Contact external service provider or implement caching"

  # SSL/TLS certificate alerts
  - name: certificate-monitoring
    interval: 12h
    rules:
    - alert: SSLCertificateExpiringSoon
      expr: |
        (probe_ssl_earliest_cert_expiry - time()) / 86400 < 30
      for: 1h
      labels:
        severity: warning
        service: security
        alert_type: certificate
      annotations:
        summary: "SSL certificate expiring soon"
        description: "SSL certificate for {{ $labels.instance }} expires in {{ $value }} days"
        runbook_url: "https://docs.leanvibe.app/runbooks/ssl-expiry"
        action: "Renew SSL certificate"
    
    - alert: SSLCertificateExpired
      expr: |
        (probe_ssl_earliest_cert_expiry - time()) / 86400 < 0
      for: 1m
      labels:
        severity: critical
        service: security
        alert_type: certificate
      annotations:
        summary: "SSL certificate has expired"
        description: "SSL certificate for {{ $labels.instance }} has expired"
        runbook_url: "https://docs.leanvibe.app/runbooks/ssl-expired"
        action: "Immediately renew SSL certificate"

  # Data integrity and backup alerts
  - name: data-integrity
    interval: 4h
    rules:
    - alert: BackupFailed
      expr: |
        time() - leanvibe_last_backup_timestamp > 86400
      for: 1h
      labels:
        severity: critical
        service: backup
        alert_type: data
      annotations:
        summary: "Database backup has failed or is overdue"
        description: "Last successful backup was {{ $value | humanizeDuration }} ago"
        runbook_url: "https://docs.leanvibe.app/runbooks/backup-failed"
        action: "Check backup service and storage availability"
    
    - alert: DataInconsistency
      expr: leanvibe_data_integrity_check_failures > 0
      for: 5m
      labels:
        severity: warning
        service: data
        alert_type: integrity
      annotations:
        summary: "Data integrity check failures detected"
        description: "{{ $value }} data integrity violations found"
        runbook_url: "https://docs.leanvibe.app/runbooks/data-integrity"
        action: "Review data consistency and recent operations"

  # Disaster recovery readiness
  - name: disaster-recovery
    interval: 24h
    rules:
    - alert: DisasterRecoveryTestOverdue
      expr: |
        time() - leanvibe_last_dr_test_timestamp > 2592000  # 30 days
      for: 1h
      labels:
        severity: warning
        service: operations
        alert_type: dr-readiness
      annotations:
        summary: "Disaster recovery test is overdue"
        description: "Last DR test was {{ $value | humanizeDuration }} ago"
        runbook_url: "https://docs.leanvibe.app/runbooks/dr-test-overdue"
        action: "Schedule and execute disaster recovery test"