name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend:
    name: Backend - tests and coverage
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./leanvibe-backend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: 'leanvibe-backend/ci-requirements.txt'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ci-requirements.txt

      - name: Database setup (SQLite)
        run: |
          echo "Using SQLite for tests"
          export LEANVIBE_DATABASE_URL="sqlite+aiosqlite:///./leanvibe_test_ci.db"
          echo "DB URL set to $LEANVIBE_DATABASE_URL"

      - name: Alembic migrate (if configured)
        env:
          LEANVIBE_DATABASE_URL: sqlite+aiosqlite:///./leanvibe_test_ci.db
        run: |
          if [ -f alembic.ini ]; then
            echo "Running Alembic migrations"
            alembic upgrade head || echo "Alembic migration skipped/failed (non-blocking)"
          else
            echo "No alembic.ini, skipping migrations"
          fi

      - name: Run focused tests with coverage
        env:
          LEANVIBE_DATABASE_URL: sqlite+aiosqlite:///./leanvibe_test_ci.db
          LEANVIBE_SECRET_KEY: test_secret_key
        run: |
          mkdir -p test_results
          pytest -q \
            it_light \
            --junitxml=test_results/junit.xml \
            --cov=app/api/endpoints/mvp_projects.py \
            --cov=app/api/endpoints/audit.py \
            --cov=app/api/endpoints/pipelines.py \
            --cov=app/services/storage \
            --cov-branch \
            --cov-report=term \
            --cov-report=xml:test_results/coverage.xml \
            --cov-fail-under=65

      - name: Upload test artifacts (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: backend-test-artifacts
          path: |
            leanvibe-backend/test_results/**

  frontend:
    name: Frontend - jest and smoke
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./leanvibe-backend/leanvibe-frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'leanvibe-backend/leanvibe-frontend/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Run Jest (if present)
        run: |
          npm run test --if-present || echo "No Jest tests present"

      - name: Playwright smoke (if configured)
        run: |
          npx -y playwright --version || true
          echo "Skipping Playwright smoke (not configured)"
