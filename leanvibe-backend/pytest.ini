[tool:pytest]
# Pytest Configuration for LeanVibe Backend
# Optimized for testing with mock infrastructure

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Markers
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (slower, cross-service)
    regression: Regression tests (ensure no breaking changes)
    benchmark: Performance benchmark tests
    slow: Tests that take longer to run
    mock_only: Tests that only work with mocks
    skip_ci: Tests to skip in CI environment

# Output and coverage settings
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --strict-config
    --color=yes
    --durations=10
    --maxfail=5
    --cov=app
    --cov-branch
    --cov-report=term-missing
    --cov-report=html:test_results/coverage_html
    --cov-report=xml:test_results/coverage.xml
    --cov-fail-under=70

# Async settings
asyncio_mode = auto

# Warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning:django.*
    ignore::RuntimeWarning:asyncio
    ignore::UserWarning:mlx.*
    ignore::UserWarning:transformers.*

# Test environment variables can be set in shell or CI

# Minimum version
minversion = 6.0

# Cache
cache_dir = .pytest_cache

# Timeout settings (if pytest-timeout is installed)
timeout = 300
timeout_method = thread

# Collect ignore patterns
collect_ignore = 
    setup.py
    venv/
    node_modules/
    .git/
    build/
    dist/
    __pycache__/

# Required plugins (uncomment if you want to enforce)
# required_plugins = pytest-cov>=4.0.0 pytest-asyncio>=0.21.0

# Log settings
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = test_results/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d: %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S