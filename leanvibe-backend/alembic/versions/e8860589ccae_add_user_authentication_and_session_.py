"""Add user authentication and session management tables

Revision ID: e8860589ccae
Revises: 000fd3d14730
Create Date: 2025-08-12 05:21:53.305017

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e8860589ccae'
down_revision: Union[str, None] = '000fd3d14730'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tenants',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_type', sa.Enum('ENTERPRISE', 'MVP_FACTORY', name='tenanttype'), nullable=False),
    sa.Column('organization_name', sa.String(length=255), nullable=False),
    sa.Column('display_name', sa.String(length=255), nullable=True),
    sa.Column('slug', sa.String(length=50), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'SUSPENDED', 'TRIAL', 'INACTIVE', 'CANCELLED', name='tenantstatus'), nullable=False),
    sa.Column('plan', sa.Enum('DEVELOPER', 'TEAM', 'ENTERPRISE', 'MVP_SINGLE', 'MVP_BUNDLE', name='tenantplan'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('trial_ends_at', sa.DateTime(), nullable=True),
    sa.Column('subscription_ends_at', sa.DateTime(), nullable=True),
    sa.Column('last_activity_at', sa.DateTime(), nullable=False),
    sa.Column('admin_email', sa.String(length=255), nullable=False),
    sa.Column('billing_email', sa.String(length=255), nullable=True),
    sa.Column('founder_name', sa.String(length=255), nullable=True),
    sa.Column('founder_phone', sa.String(length=50), nullable=True),
    sa.Column('business_description', sa.Text(), nullable=True),
    sa.Column('target_market', sa.String(length=500), nullable=True),
    sa.Column('mvp_count_used', sa.Integer(), nullable=False),
    sa.Column('data_residency', sa.Enum('US', 'EU', 'UK', 'CANADA', 'AUSTRALIA', name='tenantdataresidency'), nullable=False),
    sa.Column('encryption_key_id', sa.String(length=255), nullable=True),
    sa.Column('quotas', sa.JSON(), nullable=False),
    sa.Column('current_usage', sa.JSON(), nullable=False),
    sa.Column('configuration', sa.JSON(), nullable=False),
    sa.Column('parent_tenant_id', sa.UUID(), nullable=True),
    sa.CheckConstraint("admin_email LIKE '%@%'", name='chk_admin_email_format'),
    sa.CheckConstraint('created_at <= updated_at', name='chk_tenant_timestamps'),
    sa.ForeignKeyConstraint(['parent_tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_tenant_activity', 'tenants', ['last_activity_at'], unique=False)
    op.create_index('idx_tenant_org_name', 'tenants', ['organization_name'], unique=False)
    op.create_index('idx_tenant_status_plan', 'tenants', ['status', 'plan'], unique=False)
    op.create_index(op.f('ix_tenants_admin_email'), 'tenants', ['admin_email'], unique=False)
    op.create_index(op.f('ix_tenants_created_at'), 'tenants', ['created_at'], unique=False)
    op.create_index(op.f('ix_tenants_id'), 'tenants', ['id'], unique=False)
    op.create_index(op.f('ix_tenants_last_activity_at'), 'tenants', ['last_activity_at'], unique=False)
    op.create_index(op.f('ix_tenants_organization_name'), 'tenants', ['organization_name'], unique=False)
    op.create_index(op.f('ix_tenants_plan'), 'tenants', ['plan'], unique=False)
    op.create_index(op.f('ix_tenants_slug'), 'tenants', ['slug'], unique=True)
    op.create_index(op.f('ix_tenants_status'), 'tenants', ['status'], unique=False)
    op.create_index(op.f('ix_tenants_tenant_type'), 'tenants', ['tenant_type'], unique=False)
    op.create_table('audit_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('action', sa.String(length=100), nullable=False),
    sa.Column('resource_type', sa.String(length=50), nullable=False),
    sa.Column('resource_id', sa.String(length=255), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('user_email', sa.String(length=255), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('details', sa.JSON(), nullable=False),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_audit_tenant_action', 'audit_logs', ['tenant_id', 'action'], unique=False)
    op.create_index('idx_audit_tenant_resource', 'audit_logs', ['tenant_id', 'resource_type', 'resource_id'], unique=False)
    op.create_index('idx_audit_tenant_user', 'audit_logs', ['tenant_id', 'user_id'], unique=False)
    op.create_index('idx_audit_timestamp', 'audit_logs', ['timestamp'], unique=False)
    op.create_index(op.f('ix_audit_logs_action'), 'audit_logs', ['action'], unique=False)
    op.create_index(op.f('ix_audit_logs_id'), 'audit_logs', ['id'], unique=False)
    op.create_index(op.f('ix_audit_logs_resource_id'), 'audit_logs', ['resource_id'], unique=False)
    op.create_index(op.f('ix_audit_logs_resource_type'), 'audit_logs', ['resource_type'], unique=False)
    op.create_index(op.f('ix_audit_logs_tenant_id'), 'audit_logs', ['tenant_id'], unique=False)
    op.create_index(op.f('ix_audit_logs_timestamp'), 'audit_logs', ['timestamp'], unique=False)
    op.create_index(op.f('ix_audit_logs_user_email'), 'audit_logs', ['user_email'], unique=False)
    op.create_index(op.f('ix_audit_logs_user_id'), 'audit_logs', ['user_id'], unique=False)
    op.create_table('mvp_projects',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('project_name', sa.String(length=255), nullable=False),
    sa.Column('slug', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('deployed_at', sa.DateTime(), nullable=True),
    sa.Column('interview_data', sa.JSON(), nullable=True),
    sa.Column('blueprint_data', sa.JSON(), nullable=True),
    sa.Column('generation_progress', sa.JSON(), nullable=False),
    sa.Column('blueprint_approval', sa.JSON(), nullable=True),
    sa.Column('deployment_approval', sa.JSON(), nullable=True),
    sa.Column('deployment_url', sa.String(length=500), nullable=True),
    sa.Column('repository_url', sa.String(length=500), nullable=True),
    sa.Column('monitoring_dashboard_url', sa.String(length=500), nullable=True),
    sa.Column('admin_panel_url', sa.String(length=500), nullable=True),
    sa.Column('cpu_hours_used', sa.Float(), nullable=False),
    sa.Column('memory_gb_hours_used', sa.Float(), nullable=False),
    sa.Column('storage_mb_used', sa.Integer(), nullable=False),
    sa.Column('ai_tokens_used', sa.Integer(), nullable=False),
    sa.Column('generation_success_rate', sa.Float(), nullable=False),
    sa.Column('deployment_uptime', sa.Float(), nullable=False),
    sa.Column('founder_satisfaction_score', sa.Integer(), nullable=True),
    sa.Column('total_cost', sa.Float(), nullable=False),
    sa.Column('payment_status', sa.String(length=50), nullable=False),
    sa.Column('payment_method', sa.String(length=50), nullable=True),
    sa.CheckConstraint('cpu_hours_used >= 0', name='chk_cpu_hours_positive'),
    sa.CheckConstraint('created_at <= updated_at', name='chk_mvp_timestamps'),
    sa.CheckConstraint('founder_satisfaction_score >= 1 AND founder_satisfaction_score <= 10', name='chk_satisfaction_range'),
    sa.CheckConstraint('memory_gb_hours_used >= 0', name='chk_memory_hours_positive'),
    sa.CheckConstraint('storage_mb_used >= 0', name='chk_storage_positive'),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_mvp_deployment_status', 'mvp_projects', ['status', 'deployed_at'], unique=False)
    op.create_index('idx_mvp_slug_tenant', 'mvp_projects', ['slug', 'tenant_id'], unique=False)
    op.create_index('idx_mvp_tenant_created', 'mvp_projects', ['tenant_id', 'created_at'], unique=False)
    op.create_index('idx_mvp_tenant_status', 'mvp_projects', ['tenant_id', 'status'], unique=False)
    op.create_index(op.f('ix_mvp_projects_created_at'), 'mvp_projects', ['created_at'], unique=False)
    op.create_index(op.f('ix_mvp_projects_id'), 'mvp_projects', ['id'], unique=False)
    op.create_index(op.f('ix_mvp_projects_project_name'), 'mvp_projects', ['project_name'], unique=False)
    op.create_index(op.f('ix_mvp_projects_slug'), 'mvp_projects', ['slug'], unique=False)
    op.create_index(op.f('ix_mvp_projects_status'), 'mvp_projects', ['status'], unique=False)
    op.create_index(op.f('ix_mvp_projects_tenant_id'), 'mvp_projects', ['tenant_id'], unique=False)
    op.create_table('password_policies',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('min_length', sa.Integer(), nullable=False),
    sa.Column('require_uppercase', sa.Boolean(), nullable=False),
    sa.Column('require_lowercase', sa.Boolean(), nullable=False),
    sa.Column('require_digits', sa.Boolean(), nullable=False),
    sa.Column('require_special', sa.Boolean(), nullable=False),
    sa.Column('special_chars', sa.String(length=50), nullable=False),
    sa.Column('max_age_days', sa.Integer(), nullable=False),
    sa.Column('history_count', sa.Integer(), nullable=False),
    sa.Column('lockout_attempts', sa.Integer(), nullable=False),
    sa.Column('lockout_duration_minutes', sa.Integer(), nullable=False),
    sa.Column('prevent_common_passwords', sa.Boolean(), nullable=False),
    sa.Column('prevent_personal_info', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint('created_at <= updated_at', name='chk_policy_timestamps'),
    sa.CheckConstraint('history_count >= 0 AND history_count <= 24', name='chk_history_range'),
    sa.CheckConstraint('lockout_attempts >= 3 AND lockout_attempts <= 20', name='chk_lockout_attempts_range'),
    sa.CheckConstraint('lockout_duration_minutes >= 5 AND lockout_duration_minutes <= 1440', name='chk_lockout_duration_range'),
    sa.CheckConstraint('max_age_days >= 30 AND max_age_days <= 365', name='chk_max_age_range'),
    sa.CheckConstraint('min_length >= 6 AND min_length <= 128', name='chk_min_length_range'),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_password_policies_id'), 'password_policies', ['id'], unique=False)
    op.create_index(op.f('ix_password_policies_tenant_id'), 'password_policies', ['tenant_id'], unique=True)
    op.create_table('projects',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('repository_url', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('settings', sa.JSON(), nullable=False),
    sa.CheckConstraint('created_at <= updated_at', name='chk_project_timestamps'),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_project_tenant_created', 'projects', ['tenant_id', 'created_at'], unique=False)
    op.create_index('idx_project_tenant_name', 'projects', ['tenant_id', 'name'], unique=False)
    op.create_index('idx_project_tenant_status', 'projects', ['tenant_id', 'status'], unique=False)
    op.create_index(op.f('ix_projects_id'), 'projects', ['id'], unique=False)
    op.create_index(op.f('ix_projects_name'), 'projects', ['name'], unique=False)
    op.create_index(op.f('ix_projects_status'), 'projects', ['status'], unique=False)
    op.create_index(op.f('ix_projects_tenant_id'), 'projects', ['tenant_id'], unique=False)
    op.create_table('sso_configurations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('provider', sa.Enum('LOCAL', 'GOOGLE', 'MICROSOFT', 'OKTA', 'AUTH0', 'SAML', 'LDAP', name='authprovider'), nullable=False),
    sa.Column('provider_name', sa.String(length=100), nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=False),
    sa.Column('client_id', sa.String(length=255), nullable=True),
    sa.Column('client_secret', sa.String(length=500), nullable=True),
    sa.Column('auth_url', sa.String(length=500), nullable=True),
    sa.Column('token_url', sa.String(length=500), nullable=True),
    sa.Column('userinfo_url', sa.String(length=500), nullable=True),
    sa.Column('scopes', sa.JSON(), nullable=False),
    sa.Column('saml_entity_id', sa.String(length=255), nullable=True),
    sa.Column('saml_sso_url', sa.String(length=500), nullable=True),
    sa.Column('saml_x509_cert', sa.Text(), nullable=True),
    sa.Column('saml_metadata_url', sa.String(length=500), nullable=True),
    sa.Column('attribute_mapping', sa.JSON(), nullable=False),
    sa.Column('auto_provision_users', sa.Boolean(), nullable=False),
    sa.Column('default_role', sa.Enum('OWNER', 'ADMIN', 'MANAGER', 'DEVELOPER', 'VIEWER', 'GUEST', name='userrole'), nullable=False),
    sa.Column('allowed_domains', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint('created_at <= updated_at', name='chk_sso_timestamps'),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_sso_enabled', 'sso_configurations', ['enabled'], unique=False)
    op.create_index('idx_sso_tenant_provider', 'sso_configurations', ['tenant_id', 'provider'], unique=True)
    op.create_index(op.f('ix_sso_configurations_id'), 'sso_configurations', ['id'], unique=False)
    op.create_index(op.f('ix_sso_configurations_provider'), 'sso_configurations', ['provider'], unique=False)
    op.create_index(op.f('ix_sso_configurations_tenant_id'), 'sso_configurations', ['tenant_id'], unique=False)
    op.create_table('tenant_members',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('invited_at', sa.DateTime(), nullable=False),
    sa.Column('joined_at', sa.DateTime(), nullable=True),
    sa.Column('last_activity_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint("email LIKE '%@%'", name='chk_member_email_format'),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_member_email', 'tenant_members', ['email'], unique=False)
    op.create_index('idx_member_role', 'tenant_members', ['role'], unique=False)
    op.create_index('idx_member_tenant_user', 'tenant_members', ['tenant_id', 'user_id'], unique=True)
    op.create_index(op.f('ix_tenant_members_email'), 'tenant_members', ['email'], unique=False)
    op.create_index(op.f('ix_tenant_members_id'), 'tenant_members', ['id'], unique=False)
    op.create_index(op.f('ix_tenant_members_tenant_id'), 'tenant_members', ['tenant_id'], unique=False)
    op.create_index(op.f('ix_tenant_members_user_id'), 'tenant_members', ['user_id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('display_name', sa.String(length=100), nullable=True),
    sa.Column('password_hash', sa.String(length=255), nullable=True),
    sa.Column('auth_provider', sa.Enum('LOCAL', 'GOOGLE', 'MICROSOFT', 'OKTA', 'AUTH0', 'SAML', 'LDAP', name='authprovider'), nullable=False),
    sa.Column('external_id', sa.String(length=255), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', 'SUSPENDED', 'PENDING_ACTIVATION', 'PENDING_PASSWORD_RESET', name='userstatus'), nullable=False),
    sa.Column('role', sa.Enum('OWNER', 'ADMIN', 'MANAGER', 'DEVELOPER', 'VIEWER', 'GUEST', name='userrole'), nullable=False),
    sa.Column('permissions', sa.JSON(), nullable=False),
    sa.Column('mfa_enabled', sa.Boolean(), nullable=False),
    sa.Column('mfa_methods', sa.JSON(), nullable=False),
    sa.Column('mfa_secret', sa.String(length=255), nullable=True),
    sa.Column('backup_codes', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('last_login_at', sa.DateTime(), nullable=True),
    sa.Column('password_changed_at', sa.DateTime(), nullable=True),
    sa.Column('require_password_change', sa.Boolean(), nullable=False),
    sa.Column('login_attempts', sa.Integer(), nullable=False),
    sa.Column('locked_until', sa.DateTime(), nullable=True),
    sa.Column('profile', sa.JSON(), nullable=False),
    sa.Column('preferences', sa.JSON(), nullable=False),
    sa.Column('email_verified', sa.Boolean(), nullable=False),
    sa.Column('email_verification_token', sa.String(length=255), nullable=True),
    sa.Column('email_verification_expires', sa.DateTime(), nullable=True),
    sa.Column('password_reset_token', sa.String(length=255), nullable=True),
    sa.Column('password_reset_expires', sa.DateTime(), nullable=True),
    sa.CheckConstraint("email LIKE '%@%'", name='chk_user_email_format'),
    sa.CheckConstraint('created_at <= updated_at', name='chk_user_timestamps'),
    sa.CheckConstraint('login_attempts >= 0', name='chk_login_attempts_positive'),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_user_provider_external', 'users', ['auth_provider', 'external_id'], unique=False)
    op.create_index('idx_user_reset_token', 'users', ['password_reset_token'], unique=False)
    op.create_index('idx_user_tenant_email', 'users', ['tenant_id', 'email'], unique=True)
    op.create_index('idx_user_tenant_role', 'users', ['tenant_id', 'role'], unique=False)
    op.create_index('idx_user_tenant_status', 'users', ['tenant_id', 'status'], unique=False)
    op.create_index('idx_user_verification_token', 'users', ['email_verification_token'], unique=False)
    op.create_index(op.f('ix_users_auth_provider'), 'users', ['auth_provider'], unique=False)
    op.create_index(op.f('ix_users_created_at'), 'users', ['created_at'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=False)
    op.create_index(op.f('ix_users_external_id'), 'users', ['external_id'], unique=False)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_last_login_at'), 'users', ['last_login_at'], unique=False)
    op.create_index(op.f('ix_users_role'), 'users', ['role'], unique=False)
    op.create_index(op.f('ix_users_status'), 'users', ['status'], unique=False)
    op.create_index(op.f('ix_users_tenant_id'), 'users', ['tenant_id'], unique=False)
    op.create_table('auth_audit_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('event_type', sa.String(length=50), nullable=False),
    sa.Column('event_description', sa.String(length=500), nullable=False),
    sa.Column('success', sa.Boolean(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('user_email', sa.String(length=255), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('location', sa.JSON(), nullable=True),
    sa.Column('event_metadata', sa.JSON(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_auth_audit_tenant_event', 'auth_audit_logs', ['tenant_id', 'event_type'], unique=False)
    op.create_index('idx_auth_audit_tenant_success', 'auth_audit_logs', ['tenant_id', 'success'], unique=False)
    op.create_index('idx_auth_audit_tenant_user', 'auth_audit_logs', ['tenant_id', 'user_id'], unique=False)
    op.create_index('idx_auth_audit_timestamp', 'auth_audit_logs', ['timestamp'], unique=False)
    op.create_index('idx_auth_audit_user_event', 'auth_audit_logs', ['user_id', 'event_type'], unique=False)
    op.create_index(op.f('ix_auth_audit_logs_event_type'), 'auth_audit_logs', ['event_type'], unique=False)
    op.create_index(op.f('ix_auth_audit_logs_id'), 'auth_audit_logs', ['id'], unique=False)
    op.create_index(op.f('ix_auth_audit_logs_success'), 'auth_audit_logs', ['success'], unique=False)
    op.create_index(op.f('ix_auth_audit_logs_tenant_id'), 'auth_audit_logs', ['tenant_id'], unique=False)
    op.create_index(op.f('ix_auth_audit_logs_timestamp'), 'auth_audit_logs', ['timestamp'], unique=False)
    op.create_index(op.f('ix_auth_audit_logs_user_email'), 'auth_audit_logs', ['user_email'], unique=False)
    op.create_index(op.f('ix_auth_audit_logs_user_id'), 'auth_audit_logs', ['user_id'], unique=False)
    op.create_table('mvp_metrics',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('mvp_project_id', sa.UUID(), nullable=False),
    sa.Column('response_time_ms', sa.Float(), nullable=False),
    sa.Column('uptime_percentage', sa.Float(), nullable=False),
    sa.Column('error_rate', sa.Float(), nullable=False),
    sa.Column('page_views', sa.Integer(), nullable=False),
    sa.Column('unique_visitors', sa.Integer(), nullable=False),
    sa.Column('conversion_rate', sa.Float(), nullable=False),
    sa.Column('user_signups', sa.Integer(), nullable=False),
    sa.Column('code_quality_score', sa.Float(), nullable=False),
    sa.Column('test_coverage', sa.Float(), nullable=False),
    sa.Column('security_score', sa.Float(), nullable=False),
    sa.Column('collected_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint('code_quality_score >= 0 AND code_quality_score <= 100', name='chk_code_quality_range'),
    sa.CheckConstraint('error_rate >= 0 AND error_rate <= 100', name='chk_error_rate_range'),
    sa.CheckConstraint('response_time_ms >= 0', name='chk_response_time_positive'),
    sa.CheckConstraint('security_score >= 0 AND security_score <= 100', name='chk_security_score_range'),
    sa.CheckConstraint('test_coverage >= 0 AND test_coverage <= 100', name='chk_test_coverage_range'),
    sa.CheckConstraint('uptime_percentage >= 0 AND uptime_percentage <= 100', name='chk_uptime_range'),
    sa.ForeignKeyConstraint(['mvp_project_id'], ['mvp_projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_metrics_collection_time', 'mvp_metrics', ['collected_at'], unique=False)
    op.create_index('idx_metrics_project_time', 'mvp_metrics', ['mvp_project_id', 'collected_at'], unique=False)
    op.create_index(op.f('ix_mvp_metrics_collected_at'), 'mvp_metrics', ['collected_at'], unique=False)
    op.create_index(op.f('ix_mvp_metrics_id'), 'mvp_metrics', ['id'], unique=False)
    op.create_index(op.f('ix_mvp_metrics_mvp_project_id'), 'mvp_metrics', ['mvp_project_id'], unique=False)
    op.create_table('tasks',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('TODO', 'IN_PROGRESS', 'TESTING', 'DONE', name='taskstatus'), nullable=False),
    sa.Column('priority', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'URGENT', name='taskpriority'), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('confidence', sa.Float(), nullable=False),
    sa.Column('agent_decision', sa.JSON(), nullable=True),
    sa.Column('client_id', sa.String(length=255), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('assigned_to', sa.String(length=255), nullable=True),
    sa.Column('estimated_effort', sa.Float(), nullable=True),
    sa.Column('actual_effort', sa.Float(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=False),
    sa.Column('dependencies', sa.JSON(), nullable=False),
    sa.Column('attachments', sa.JSON(), nullable=False),
    sa.Column('task_metadata', sa.JSON(), nullable=False),
    sa.CheckConstraint('actual_effort IS NULL OR actual_effort >= 0', name='chk_actual_effort'),
    sa.CheckConstraint('confidence >= 0.0 AND confidence <= 1.0', name='chk_task_confidence'),
    sa.CheckConstraint('created_at <= updated_at', name='chk_task_timestamps'),
    sa.CheckConstraint('estimated_effort IS NULL OR estimated_effort >= 0', name='chk_estimated_effort'),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_task_tenant_assigned', 'tasks', ['tenant_id', 'assigned_to'], unique=False)
    op.create_index('idx_task_tenant_created', 'tasks', ['tenant_id', 'created_at'], unique=False)
    op.create_index('idx_task_tenant_priority', 'tasks', ['tenant_id', 'priority'], unique=False)
    op.create_index('idx_task_tenant_project', 'tasks', ['tenant_id', 'project_id'], unique=False)
    op.create_index('idx_task_tenant_status', 'tasks', ['tenant_id', 'status'], unique=False)
    op.create_index(op.f('ix_tasks_assigned_to'), 'tasks', ['assigned_to'], unique=False)
    op.create_index(op.f('ix_tasks_client_id'), 'tasks', ['client_id'], unique=False)
    op.create_index(op.f('ix_tasks_created_at'), 'tasks', ['created_at'], unique=False)
    op.create_index(op.f('ix_tasks_created_by'), 'tasks', ['created_by'], unique=False)
    op.create_index(op.f('ix_tasks_id'), 'tasks', ['id'], unique=False)
    op.create_index(op.f('ix_tasks_priority'), 'tasks', ['priority'], unique=False)
    op.create_index(op.f('ix_tasks_project_id'), 'tasks', ['project_id'], unique=False)
    op.create_index(op.f('ix_tasks_status'), 'tasks', ['status'], unique=False)
    op.create_index(op.f('ix_tasks_tenant_id'), 'tasks', ['tenant_id'], unique=False)
    op.create_index(op.f('ix_tasks_title'), 'tasks', ['title'], unique=False)
    op.create_table('user_sessions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'EXPIRED', 'REVOKED', 'SUSPENDED', name='sessionstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('last_activity_at', sa.DateTime(), nullable=False),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('location', sa.JSON(), nullable=True),
    sa.Column('auth_method', sa.Enum('LOCAL', 'GOOGLE', 'MICROSOFT', 'OKTA', 'AUTH0', 'SAML', 'LDAP', name='authprovider'), nullable=False),
    sa.Column('mfa_verified', sa.Boolean(), nullable=False),
    sa.Column('access_token_hash', sa.String(length=64), nullable=False),
    sa.Column('refresh_token_hash', sa.String(length=64), nullable=True),
    sa.CheckConstraint('created_at <= expires_at', name='chk_session_timestamps'),
    sa.CheckConstraint('created_at <= last_activity_at', name='chk_session_activity'),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_session_access_token', 'user_sessions', ['access_token_hash'], unique=False)
    op.create_index('idx_session_activity', 'user_sessions', ['last_activity_at'], unique=False)
    op.create_index('idx_session_expires', 'user_sessions', ['expires_at'], unique=False)
    op.create_index('idx_session_refresh_token', 'user_sessions', ['refresh_token_hash'], unique=False)
    op.create_index('idx_session_tenant_status', 'user_sessions', ['tenant_id', 'status'], unique=False)
    op.create_index('idx_session_tenant_user', 'user_sessions', ['tenant_id', 'user_id'], unique=False)
    op.create_index(op.f('ix_user_sessions_access_token_hash'), 'user_sessions', ['access_token_hash'], unique=False)
    op.create_index(op.f('ix_user_sessions_auth_method'), 'user_sessions', ['auth_method'], unique=False)
    op.create_index(op.f('ix_user_sessions_created_at'), 'user_sessions', ['created_at'], unique=False)
    op.create_index(op.f('ix_user_sessions_expires_at'), 'user_sessions', ['expires_at'], unique=False)
    op.create_index(op.f('ix_user_sessions_id'), 'user_sessions', ['id'], unique=False)
    op.create_index(op.f('ix_user_sessions_refresh_token_hash'), 'user_sessions', ['refresh_token_hash'], unique=False)
    op.create_index(op.f('ix_user_sessions_status'), 'user_sessions', ['status'], unique=False)
    op.create_index(op.f('ix_user_sessions_tenant_id'), 'user_sessions', ['tenant_id'], unique=False)
    op.create_index(op.f('ix_user_sessions_user_id'), 'user_sessions', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_sessions_user_id'), table_name='user_sessions')
    op.drop_index(op.f('ix_user_sessions_tenant_id'), table_name='user_sessions')
    op.drop_index(op.f('ix_user_sessions_status'), table_name='user_sessions')
    op.drop_index(op.f('ix_user_sessions_refresh_token_hash'), table_name='user_sessions')
    op.drop_index(op.f('ix_user_sessions_id'), table_name='user_sessions')
    op.drop_index(op.f('ix_user_sessions_expires_at'), table_name='user_sessions')
    op.drop_index(op.f('ix_user_sessions_created_at'), table_name='user_sessions')
    op.drop_index(op.f('ix_user_sessions_auth_method'), table_name='user_sessions')
    op.drop_index(op.f('ix_user_sessions_access_token_hash'), table_name='user_sessions')
    op.drop_index('idx_session_tenant_user', table_name='user_sessions')
    op.drop_index('idx_session_tenant_status', table_name='user_sessions')
    op.drop_index('idx_session_refresh_token', table_name='user_sessions')
    op.drop_index('idx_session_expires', table_name='user_sessions')
    op.drop_index('idx_session_activity', table_name='user_sessions')
    op.drop_index('idx_session_access_token', table_name='user_sessions')
    op.drop_table('user_sessions')
    op.drop_index(op.f('ix_tasks_title'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_tenant_id'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_status'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_project_id'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_priority'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_id'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_created_by'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_created_at'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_client_id'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_assigned_to'), table_name='tasks')
    op.drop_index('idx_task_tenant_status', table_name='tasks')
    op.drop_index('idx_task_tenant_project', table_name='tasks')
    op.drop_index('idx_task_tenant_priority', table_name='tasks')
    op.drop_index('idx_task_tenant_created', table_name='tasks')
    op.drop_index('idx_task_tenant_assigned', table_name='tasks')
    op.drop_table('tasks')
    op.drop_index(op.f('ix_mvp_metrics_mvp_project_id'), table_name='mvp_metrics')
    op.drop_index(op.f('ix_mvp_metrics_id'), table_name='mvp_metrics')
    op.drop_index(op.f('ix_mvp_metrics_collected_at'), table_name='mvp_metrics')
    op.drop_index('idx_metrics_project_time', table_name='mvp_metrics')
    op.drop_index('idx_metrics_collection_time', table_name='mvp_metrics')
    op.drop_table('mvp_metrics')
    op.drop_index(op.f('ix_auth_audit_logs_user_id'), table_name='auth_audit_logs')
    op.drop_index(op.f('ix_auth_audit_logs_user_email'), table_name='auth_audit_logs')
    op.drop_index(op.f('ix_auth_audit_logs_timestamp'), table_name='auth_audit_logs')
    op.drop_index(op.f('ix_auth_audit_logs_tenant_id'), table_name='auth_audit_logs')
    op.drop_index(op.f('ix_auth_audit_logs_success'), table_name='auth_audit_logs')
    op.drop_index(op.f('ix_auth_audit_logs_id'), table_name='auth_audit_logs')
    op.drop_index(op.f('ix_auth_audit_logs_event_type'), table_name='auth_audit_logs')
    op.drop_index('idx_auth_audit_user_event', table_name='auth_audit_logs')
    op.drop_index('idx_auth_audit_timestamp', table_name='auth_audit_logs')
    op.drop_index('idx_auth_audit_tenant_user', table_name='auth_audit_logs')
    op.drop_index('idx_auth_audit_tenant_success', table_name='auth_audit_logs')
    op.drop_index('idx_auth_audit_tenant_event', table_name='auth_audit_logs')
    op.drop_table('auth_audit_logs')
    op.drop_index(op.f('ix_users_tenant_id'), table_name='users')
    op.drop_index(op.f('ix_users_status'), table_name='users')
    op.drop_index(op.f('ix_users_role'), table_name='users')
    op.drop_index(op.f('ix_users_last_login_at'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_external_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_created_at'), table_name='users')
    op.drop_index(op.f('ix_users_auth_provider'), table_name='users')
    op.drop_index('idx_user_verification_token', table_name='users')
    op.drop_index('idx_user_tenant_status', table_name='users')
    op.drop_index('idx_user_tenant_role', table_name='users')
    op.drop_index('idx_user_tenant_email', table_name='users')
    op.drop_index('idx_user_reset_token', table_name='users')
    op.drop_index('idx_user_provider_external', table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_tenant_members_user_id'), table_name='tenant_members')
    op.drop_index(op.f('ix_tenant_members_tenant_id'), table_name='tenant_members')
    op.drop_index(op.f('ix_tenant_members_id'), table_name='tenant_members')
    op.drop_index(op.f('ix_tenant_members_email'), table_name='tenant_members')
    op.drop_index('idx_member_tenant_user', table_name='tenant_members')
    op.drop_index('idx_member_role', table_name='tenant_members')
    op.drop_index('idx_member_email', table_name='tenant_members')
    op.drop_table('tenant_members')
    op.drop_index(op.f('ix_sso_configurations_tenant_id'), table_name='sso_configurations')
    op.drop_index(op.f('ix_sso_configurations_provider'), table_name='sso_configurations')
    op.drop_index(op.f('ix_sso_configurations_id'), table_name='sso_configurations')
    op.drop_index('idx_sso_tenant_provider', table_name='sso_configurations')
    op.drop_index('idx_sso_enabled', table_name='sso_configurations')
    op.drop_table('sso_configurations')
    op.drop_index(op.f('ix_projects_tenant_id'), table_name='projects')
    op.drop_index(op.f('ix_projects_status'), table_name='projects')
    op.drop_index(op.f('ix_projects_name'), table_name='projects')
    op.drop_index(op.f('ix_projects_id'), table_name='projects')
    op.drop_index('idx_project_tenant_status', table_name='projects')
    op.drop_index('idx_project_tenant_name', table_name='projects')
    op.drop_index('idx_project_tenant_created', table_name='projects')
    op.drop_table('projects')
    op.drop_index(op.f('ix_password_policies_tenant_id'), table_name='password_policies')
    op.drop_index(op.f('ix_password_policies_id'), table_name='password_policies')
    op.drop_table('password_policies')
    op.drop_index(op.f('ix_mvp_projects_tenant_id'), table_name='mvp_projects')
    op.drop_index(op.f('ix_mvp_projects_status'), table_name='mvp_projects')
    op.drop_index(op.f('ix_mvp_projects_slug'), table_name='mvp_projects')
    op.drop_index(op.f('ix_mvp_projects_project_name'), table_name='mvp_projects')
    op.drop_index(op.f('ix_mvp_projects_id'), table_name='mvp_projects')
    op.drop_index(op.f('ix_mvp_projects_created_at'), table_name='mvp_projects')
    op.drop_index('idx_mvp_tenant_status', table_name='mvp_projects')
    op.drop_index('idx_mvp_tenant_created', table_name='mvp_projects')
    op.drop_index('idx_mvp_slug_tenant', table_name='mvp_projects')
    op.drop_index('idx_mvp_deployment_status', table_name='mvp_projects')
    op.drop_table('mvp_projects')
    op.drop_index(op.f('ix_audit_logs_user_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_user_email'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_timestamp'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_tenant_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_resource_type'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_resource_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_action'), table_name='audit_logs')
    op.drop_index('idx_audit_timestamp', table_name='audit_logs')
    op.drop_index('idx_audit_tenant_user', table_name='audit_logs')
    op.drop_index('idx_audit_tenant_resource', table_name='audit_logs')
    op.drop_index('idx_audit_tenant_action', table_name='audit_logs')
    op.drop_table('audit_logs')
    op.drop_index(op.f('ix_tenants_tenant_type'), table_name='tenants')
    op.drop_index(op.f('ix_tenants_status'), table_name='tenants')
    op.drop_index(op.f('ix_tenants_slug'), table_name='tenants')
    op.drop_index(op.f('ix_tenants_plan'), table_name='tenants')
    op.drop_index(op.f('ix_tenants_organization_name'), table_name='tenants')
    op.drop_index(op.f('ix_tenants_last_activity_at'), table_name='tenants')
    op.drop_index(op.f('ix_tenants_id'), table_name='tenants')
    op.drop_index(op.f('ix_tenants_created_at'), table_name='tenants')
    op.drop_index(op.f('ix_tenants_admin_email'), table_name='tenants')
    op.drop_index('idx_tenant_status_plan', table_name='tenants')
    op.drop_index('idx_tenant_org_name', table_name='tenants')
    op.drop_index('idx_tenant_activity', table_name='tenants')
    op.drop_table('tenants')
    # ### end Alembic commands ###
