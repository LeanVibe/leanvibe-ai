"""Add enterprise multi-tenant schema with row-level security

Revision ID: fad491620d96
Revises: 
Create Date: 2025-08-11 02:16:17.908311

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'fad491620d96'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tenants',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('organization_name', sa.String(length=255), nullable=False),
    sa.Column('display_name', sa.String(length=255), nullable=True),
    sa.Column('slug', sa.String(length=50), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'SUSPENDED', 'TRIAL', 'INACTIVE', 'CANCELLED', name='tenantstatus'), nullable=False),
    sa.Column('plan', sa.Enum('DEVELOPER', 'TEAM', 'ENTERPRISE', name='tenantplan'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('trial_ends_at', sa.DateTime(), nullable=True),
    sa.Column('subscription_ends_at', sa.DateTime(), nullable=True),
    sa.Column('last_activity_at', sa.DateTime(), nullable=False),
    sa.Column('admin_email', sa.String(length=255), nullable=False),
    sa.Column('billing_email', sa.String(length=255), nullable=True),
    sa.Column('data_residency', sa.Enum('US', 'EU', 'UK', 'CANADA', 'AUSTRALIA', name='tenantdataresidency'), nullable=False),
    sa.Column('encryption_key_id', sa.String(length=255), nullable=True),
    sa.Column('quotas', sa.JSON(), nullable=False),
    sa.Column('current_usage', sa.JSON(), nullable=False),
    sa.Column('configuration', sa.JSON(), nullable=False),
    sa.Column('parent_tenant_id', sa.UUID(), nullable=True),
    sa.CheckConstraint("admin_email LIKE '%@%'", name='chk_admin_email_format'),
    sa.CheckConstraint('created_at <= updated_at', name='chk_tenant_timestamps'),
    sa.ForeignKeyConstraint(['parent_tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_tenant_activity', 'tenants', ['last_activity_at'], unique=False)
    op.create_index('idx_tenant_org_name', 'tenants', ['organization_name'], unique=False)
    op.create_index('idx_tenant_status_plan', 'tenants', ['status', 'plan'], unique=False)
    op.create_index(op.f('ix_tenants_admin_email'), 'tenants', ['admin_email'], unique=False)
    op.create_index(op.f('ix_tenants_created_at'), 'tenants', ['created_at'], unique=False)
    op.create_index(op.f('ix_tenants_id'), 'tenants', ['id'], unique=False)
    op.create_index(op.f('ix_tenants_last_activity_at'), 'tenants', ['last_activity_at'], unique=False)
    op.create_index(op.f('ix_tenants_organization_name'), 'tenants', ['organization_name'], unique=False)
    op.create_index(op.f('ix_tenants_plan'), 'tenants', ['plan'], unique=False)
    op.create_index(op.f('ix_tenants_slug'), 'tenants', ['slug'], unique=True)
    op.create_index(op.f('ix_tenants_status'), 'tenants', ['status'], unique=False)
    op.create_table('audit_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('action', sa.String(length=100), nullable=False),
    sa.Column('resource_type', sa.String(length=50), nullable=False),
    sa.Column('resource_id', sa.String(length=255), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('user_email', sa.String(length=255), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('details', sa.JSON(), nullable=False),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_audit_tenant_action', 'audit_logs', ['tenant_id', 'action'], unique=False)
    op.create_index('idx_audit_tenant_resource', 'audit_logs', ['tenant_id', 'resource_type', 'resource_id'], unique=False)
    op.create_index('idx_audit_tenant_user', 'audit_logs', ['tenant_id', 'user_id'], unique=False)
    op.create_index('idx_audit_timestamp', 'audit_logs', ['timestamp'], unique=False)
    op.create_index(op.f('ix_audit_logs_action'), 'audit_logs', ['action'], unique=False)
    op.create_index(op.f('ix_audit_logs_id'), 'audit_logs', ['id'], unique=False)
    op.create_index(op.f('ix_audit_logs_resource_id'), 'audit_logs', ['resource_id'], unique=False)
    op.create_index(op.f('ix_audit_logs_resource_type'), 'audit_logs', ['resource_type'], unique=False)
    op.create_index(op.f('ix_audit_logs_tenant_id'), 'audit_logs', ['tenant_id'], unique=False)
    op.create_index(op.f('ix_audit_logs_timestamp'), 'audit_logs', ['timestamp'], unique=False)
    op.create_index(op.f('ix_audit_logs_user_email'), 'audit_logs', ['user_email'], unique=False)
    op.create_index(op.f('ix_audit_logs_user_id'), 'audit_logs', ['user_id'], unique=False)
    op.create_table('projects',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('repository_url', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('settings', sa.JSON(), nullable=False),
    sa.CheckConstraint('created_at <= updated_at', name='chk_project_timestamps'),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_project_tenant_created', 'projects', ['tenant_id', 'created_at'], unique=False)
    op.create_index('idx_project_tenant_name', 'projects', ['tenant_id', 'name'], unique=False)
    op.create_index('idx_project_tenant_status', 'projects', ['tenant_id', 'status'], unique=False)
    op.create_index(op.f('ix_projects_id'), 'projects', ['id'], unique=False)
    op.create_index(op.f('ix_projects_name'), 'projects', ['name'], unique=False)
    op.create_index(op.f('ix_projects_status'), 'projects', ['status'], unique=False)
    op.create_index(op.f('ix_projects_tenant_id'), 'projects', ['tenant_id'], unique=False)
    op.create_table('tenant_members',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('invited_at', sa.DateTime(), nullable=False),
    sa.Column('joined_at', sa.DateTime(), nullable=True),
    sa.Column('last_activity_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint("email LIKE '%@%'", name='chk_member_email_format'),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_member_email', 'tenant_members', ['email'], unique=False)
    op.create_index('idx_member_role', 'tenant_members', ['role'], unique=False)
    op.create_index('idx_member_tenant_user', 'tenant_members', ['tenant_id', 'user_id'], unique=True)
    op.create_index(op.f('ix_tenant_members_email'), 'tenant_members', ['email'], unique=False)
    op.create_index(op.f('ix_tenant_members_id'), 'tenant_members', ['id'], unique=False)
    op.create_index(op.f('ix_tenant_members_tenant_id'), 'tenant_members', ['tenant_id'], unique=False)
    op.create_index(op.f('ix_tenant_members_user_id'), 'tenant_members', ['user_id'], unique=False)
    op.create_table('tasks',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('TODO', 'IN_PROGRESS', 'TESTING', 'DONE', name='taskstatus'), nullable=False),
    sa.Column('priority', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'URGENT', name='taskpriority'), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('confidence', sa.Float(), nullable=False),
    sa.Column('agent_decision', sa.JSON(), nullable=True),
    sa.Column('client_id', sa.String(length=255), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('assigned_to', sa.String(length=255), nullable=True),
    sa.Column('estimated_effort', sa.Float(), nullable=True),
    sa.Column('actual_effort', sa.Float(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=False),
    sa.Column('dependencies', sa.JSON(), nullable=False),
    sa.Column('attachments', sa.JSON(), nullable=False),
    sa.Column('task_metadata', sa.JSON(), nullable=False),
    sa.CheckConstraint('actual_effort IS NULL OR actual_effort >= 0', name='chk_actual_effort'),
    sa.CheckConstraint('confidence >= 0.0 AND confidence <= 1.0', name='chk_task_confidence'),
    sa.CheckConstraint('created_at <= updated_at', name='chk_task_timestamps'),
    sa.CheckConstraint('estimated_effort IS NULL OR estimated_effort >= 0', name='chk_estimated_effort'),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_task_tenant_assigned', 'tasks', ['tenant_id', 'assigned_to'], unique=False)
    op.create_index('idx_task_tenant_created', 'tasks', ['tenant_id', 'created_at'], unique=False)
    op.create_index('idx_task_tenant_priority', 'tasks', ['tenant_id', 'priority'], unique=False)
    op.create_index('idx_task_tenant_project', 'tasks', ['tenant_id', 'project_id'], unique=False)
    op.create_index('idx_task_tenant_status', 'tasks', ['tenant_id', 'status'], unique=False)
    op.create_index(op.f('ix_tasks_assigned_to'), 'tasks', ['assigned_to'], unique=False)
    op.create_index(op.f('ix_tasks_client_id'), 'tasks', ['client_id'], unique=False)
    op.create_index(op.f('ix_tasks_created_at'), 'tasks', ['created_at'], unique=False)
    op.create_index(op.f('ix_tasks_created_by'), 'tasks', ['created_by'], unique=False)
    op.create_index(op.f('ix_tasks_id'), 'tasks', ['id'], unique=False)
    op.create_index(op.f('ix_tasks_priority'), 'tasks', ['priority'], unique=False)
    op.create_index(op.f('ix_tasks_project_id'), 'tasks', ['project_id'], unique=False)
    op.create_index(op.f('ix_tasks_status'), 'tasks', ['status'], unique=False)
    op.create_index(op.f('ix_tasks_tenant_id'), 'tasks', ['tenant_id'], unique=False)
    op.create_index(op.f('ix_tasks_title'), 'tasks', ['title'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_tasks_title'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_tenant_id'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_status'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_project_id'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_priority'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_id'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_created_by'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_created_at'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_client_id'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_assigned_to'), table_name='tasks')
    op.drop_index('idx_task_tenant_status', table_name='tasks')
    op.drop_index('idx_task_tenant_project', table_name='tasks')
    op.drop_index('idx_task_tenant_priority', table_name='tasks')
    op.drop_index('idx_task_tenant_created', table_name='tasks')
    op.drop_index('idx_task_tenant_assigned', table_name='tasks')
    op.drop_table('tasks')
    op.drop_index(op.f('ix_tenant_members_user_id'), table_name='tenant_members')
    op.drop_index(op.f('ix_tenant_members_tenant_id'), table_name='tenant_members')
    op.drop_index(op.f('ix_tenant_members_id'), table_name='tenant_members')
    op.drop_index(op.f('ix_tenant_members_email'), table_name='tenant_members')
    op.drop_index('idx_member_tenant_user', table_name='tenant_members')
    op.drop_index('idx_member_role', table_name='tenant_members')
    op.drop_index('idx_member_email', table_name='tenant_members')
    op.drop_table('tenant_members')
    op.drop_index(op.f('ix_projects_tenant_id'), table_name='projects')
    op.drop_index(op.f('ix_projects_status'), table_name='projects')
    op.drop_index(op.f('ix_projects_name'), table_name='projects')
    op.drop_index(op.f('ix_projects_id'), table_name='projects')
    op.drop_index('idx_project_tenant_status', table_name='projects')
    op.drop_index('idx_project_tenant_name', table_name='projects')
    op.drop_index('idx_project_tenant_created', table_name='projects')
    op.drop_table('projects')
    op.drop_index(op.f('ix_audit_logs_user_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_user_email'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_timestamp'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_tenant_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_resource_type'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_resource_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_action'), table_name='audit_logs')
    op.drop_index('idx_audit_timestamp', table_name='audit_logs')
    op.drop_index('idx_audit_tenant_user', table_name='audit_logs')
    op.drop_index('idx_audit_tenant_resource', table_name='audit_logs')
    op.drop_index('idx_audit_tenant_action', table_name='audit_logs')
    op.drop_table('audit_logs')
    op.drop_index(op.f('ix_tenants_status'), table_name='tenants')
    op.drop_index(op.f('ix_tenants_slug'), table_name='tenants')
    op.drop_index(op.f('ix_tenants_plan'), table_name='tenants')
    op.drop_index(op.f('ix_tenants_organization_name'), table_name='tenants')
    op.drop_index(op.f('ix_tenants_last_activity_at'), table_name='tenants')
    op.drop_index(op.f('ix_tenants_id'), table_name='tenants')
    op.drop_index(op.f('ix_tenants_created_at'), table_name='tenants')
    op.drop_index(op.f('ix_tenants_admin_email'), table_name='tenants')
    op.drop_index('idx_tenant_status_plan', table_name='tenants')
    op.drop_index('idx_tenant_org_name', table_name='tenants')
    op.drop_index('idx_tenant_activity', table_name='tenants')
    op.drop_table('tenants')
    # ### end Alembic commands ###
