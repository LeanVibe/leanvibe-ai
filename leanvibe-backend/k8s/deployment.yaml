# LeanVibe Enterprise Backend Deployment
# Production-ready deployment with auto-scaling and enterprise features
apiVersion: apps/v1
kind: Deployment
metadata:
  name: leanvibe-backend
  namespace: leanvibe-production
  labels:
    app.kubernetes.io/name: leanvibe
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: backend
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: kubernetes
    environment: production
    tier: backend
  annotations:
    deployment.kubernetes.io/revision: "1"
    description: "LeanVibe Enterprise Backend Application"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: leanvibe
      app.kubernetes.io/component: backend
      environment: production
  template:
    metadata:
      labels:
        app.kubernetes.io/name: leanvibe
        app.kubernetes.io/component: backend
        app.kubernetes.io/version: "1.0.0"
        environment: production
        tier: backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8765"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: leanvibe-backend
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      
      # Pod Anti-Affinity for High Availability
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - leanvibe
              topologyKey: kubernetes.io/hostname
      
      # Init Container for Database Migration
      initContainers:
      - name: database-migration
        image: leanvibe-backend:latest
        command: ['python', '-c', 'import sys; sys.exit(0)']  # Placeholder for migration
        env:
        - name: ENVIRONMENT
          value: "production"
        envFrom:
        - configMapRef:
            name: leanvibe-config
        - secretRef:
            name: leanvibe-database-secrets
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
      
      containers:
      - name: leanvibe-backend
        image: leanvibe-backend:latest
        imagePullPolicy: Always
        
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        
        # Environment Variables from ConfigMap and Secrets
        envFrom:
        - configMapRef:
            name: leanvibe-config
        - configMapRef:
            name: leanvibe-database-config
        - secretRef:
            name: leanvibe-secrets
        - secretRef:
            name: leanvibe-database-secrets
        
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        
        # Resource Limits for Enterprise SLA
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1"
        
        # Liveness Probe - Restart container if unhealthy
        livenessProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        
        # Readiness Probe - Route traffic only when ready
        readinessProbe:
          httpGet:
            path: /health/ready
            port: http
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        
        # Startup Probe - Allow longer startup time
        startupProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 30
        
        # Security Context
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
        
        # Volume Mounts
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: logs
          mountPath: /app/logs
        - name: cache
          mountPath: /app/cache
      
      # Volumes
      volumes:
      - name: tmp
        emptyDir: {}
      - name: logs
        emptyDir: {}
      - name: cache
        emptyDir:
          sizeLimit: 1Gi
      
      # Termination Grace Period for Graceful Shutdown
      terminationGracePeriodSeconds: 30
      
      # DNS Policy for Service Discovery
      dnsPolicy: ClusterFirst
      
      # Restart Policy
      restartPolicy: Always
---
# Horizontal Pod Autoscaler for Enterprise Scaling
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: leanvibe-backend-hpa
  namespace: leanvibe-production
  labels:
    app.kubernetes.io/name: leanvibe
    app.kubernetes.io/component: backend
    environment: production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: leanvibe-backend
  minReplicas: 3
  maxReplicas: 20
  metrics:
  # CPU-based scaling
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  # Memory-based scaling
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  # Custom metrics for tenant load
  - type: Pods
    pods:
      metric:
        name: active_tenants_per_pod
      target:
        type: AverageValue
        averageValue: "50"
  
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Max
---
# Pod Disruption Budget for High Availability
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: leanvibe-backend-pdb
  namespace: leanvibe-production
  labels:
    app.kubernetes.io/name: leanvibe
    app.kubernetes.io/component: backend
    environment: production
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: leanvibe
      app.kubernetes.io/component: backend
      environment: production