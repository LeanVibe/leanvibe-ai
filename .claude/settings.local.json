{
  "permissions": {
    "allow": [
      "Bash(git commit:*)",
      "Bash(rg:*)",
      "Bash(ls:*)",
      "Bash(git add:*)",
      "Bash(find:*)",
      "Bash(swiftlint:*)",
      "Bash(grep:*)",
      "Bash(xcodebuild:*)",
      "Bash(xcrun devicectl list:*)",
      "Bash(sed:*)",
      "Bash(open:*)",
      "Bash(xcrun xctrace:*)",
      "Bash(swiftc:*)",
      "Bash(xcrun simctl boot:*)",
      "Bash(xcrun simctl install:*)",
      "Bash(xcrun simctl launch:*)",
      "Bash(plutil:*)",
      "Bash(xcrun simctl list:*)",
      "Bash(xcrun simctl io:*)",
      "Bash(xcrun simctl terminate:*)",
      "Bash(gh issue list:*)",
      "Bash(gh issue close:*)",
      "Bash(gh issue comment:*)",
      "Bash(gh issue create:*)",
      "Bash(swift:*)",
      "WebFetch(domain:developer.apple.com)",
      "Bash(xcrun simctl spawn:*)",
      "Bash(cp:*)",
      "Bash(sips:*)",
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "Bash(xcrun devicectl device install:*)",
      "Bash(security find-identity:*)",
      "Bash(xcrun devicectl device process launch:*)",
      "Bash(xcrun assetutil:*)",
      "Bash(chmod:*)",
      "Bash(git rev-list:*)",
      "Bash(xcrun devicectl device uninstall app:*)",
      "Bash(./Scripts/increment-version.sh:*)",
      "Bash(SRCROOT=/Users/bogdan/work/dyna-story ./Scripts/increment-version.sh)",
      "Bash(/usr/libexec/PlistBuddy:*)",
      "Bash(gh issue edit:*)",
      "Bash(timeout 10 swift:*)",
      "Bash(gh repo view:*)",
      "Bash(gh label:*)",
      "Bash(gh api:*)",
      "Bash(gh milestone list:*)",
      "Bash(echo:*)",
      "Bash(gh pr:*)",
      "Bash(touch:*)",
      "Bash(xcodegen generate:*)",
      "Bash(./Scripts/update-project.sh:*)",
      "Bash(git worktree:*)",
      "Bash(/Users/bogdan/work/dyna-story/update_character_assets.sh:*)",
      "Bash(gh issue:*)",
      "Bash(git merge:*)",
      "Bash(timeout 30 xcodebuild:*)",
      "Bash(timeout 60 xcodebuild:*)",
      "Bash(./fix-xcode-dependencies.sh:*)",
      "Bash(git tag:*)",
      "Bash(git checkout:*)",
      "Bash(python3:*)",
      "Bash(python:*)",
      "Bash(gh run list:*)",
      "Bash(gh run view:*)",
      "Bash(yamllint:*)",
      "Bash(true)",
      "Bash(uv add:*)",
      "Bash(curl:*)",
      "Bash(git -C /Users/bogdan/work/leanvibe-ios-visualization log --oneline -3)",
      "Bash(git -C /Users/bogdan/work/leanvibe-ios-dashboard log --oneline -3)",
      "Bash(git -C /Users/bogdan/work/leanvibe-ios-voice log --oneline -3)",
      "Bash(git -C /Users/bogdan/work/leanvibe-backend-apis log --oneline -3)",
      "Bash(uv run:*)",
      "Bash(uv sync:*)",
      "Bash(timeout 10 uv run:*)",
      "Bash(timeout:*)",
      "Bash(git -C /Users/bogdan/work/leanvibe-cli-enhancements log --oneline -3)",
      "Bash(git -C /Users/bogdan/work/leanvibe-ios-notifications log --oneline -3)",
      "Bash(git -C /Users/bogdan/work/leanvibe-ios-notifications log --oneline -5)",
      "Bash(git -C /Users/bogdan/work/leanvibe-ios-settings log --oneline -3)",
      "Bash(git -C /Users/bogdan/work/leanvibe-ios-settings show --name-only db1597e)",
      "Bash(git -C /Users/bogdan/work/leanvibe-ios-settings show db1597e --name-only)",
      "Bash(git -C /Users/bogdan/work/leanvibe-cli-enhancements log --oneline -5)",
      "Bash(git -C /Users/bogdan/work/leanvibe-qa-automation log --oneline -3)",
      "Bash(uv pip install:*)",
      "Bash(./install_on_device.sh:*)",
      "Bash(for file in ./Architecture/DiagramComparisonView.swift ./Architecture/DiagramNavigationView.swift ./Kanban/TaskCreationView.swift)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(head:*)",
      "Bash(done)",
      "Bash(for file in ./Kanban/TaskStatisticsView.swift ./Kanban/TaskDetailView.swift ./Kanban/TaskEditView.swift)",
      "Bash(for file in ./Production/ProductionReadinessView.swift ./Performance/PerformanceValidationView.swift ./Performance/AnimationPerformanceView.swift)",
      "Bash(ruff check:*)",
      "Bash(uv venv:*)",
      "Bash(source:*)",
      "Bash(git rm:*)",
      "Bash(gemini:*)",
      "Bash(rm:*)",
      "Bash(for:*)",
      "Bash(do)",
      "Bash(if grep -q \"struct.*OnboardingView.*: View\" \"$file\")",
      "Bash(! grep -q \"@available\" \"$file\")",
      "Bash(then)",
      "Bash(fi)",
      "Bash(if ! grep -q \"@available\" \"$file\")",
      "Bash(if grep -q \"struct.*SettingsView.*: View\" \"$file\")",
      "Bash(pkill:*)",
      "Bash(pytest:*)",
      "Bash(pip install:*)",
      "Bash(./ci-check.sh)",
      "Bash(git branch:*)",
      "Bash(./quick_validate.sh:*)",
      "Bash(./start.sh:*)"
    ],
    "deny": []
  }
}